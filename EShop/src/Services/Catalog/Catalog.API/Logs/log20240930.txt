2024-09-30 10:02:58.262 +07:00 [INF] TraceId:0HN70VHE1G3FN:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:02:58.318 +07:00 [INF] TraceId:0HN70VHE1G3FN:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:02:59.212 +07:00 [ERR] TraceId:0HN70VHE1G3FN:00000009. Execute Query Product in database catch
. -Exception:Value cannot be null. (Parameter 'source')
. -Stacktrace:   at System.Linq.ThrowHelper.ThrowArgumentNullException(ExceptionArgument argument)
   at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source)
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 0
2024-09-30 10:02:59.271 +07:00 [ERR] TraceId:0HN70VHE1G3FN:00000009. An unexpected error occurred while retrieving the Product en.
. Exception:Value cannot be null. (Parameter 'source').
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151.
BuildingBlock.Exceptions.InternalServerException: Value cannot be null. (Parameter 'source')
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151
2024-09-30 10:02:59.354 +07:00 [ERR] Error Message: Value cannot be null. (Parameter 'source'), Time of occurence "2024-09-30T03:02:59.3540128Z"
2024-09-30 10:04:57.766 +07:00 [INF] TraceId:0HN70VHE1G3FN:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:05:21.614 +07:00 [INF] TraceId:0HN70VHE1G3FN:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:07:47.355 +07:00 [ERR] TraceId:0HN70VHE1G3FN:0000000B. Execute Query Product in database catch
. -Exception:Value cannot be null. (Parameter 'source')
. -Stacktrace:   at System.Linq.ThrowHelper.ThrowArgumentNullException(ExceptionArgument argument)
   at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source)
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 0
2024-09-30 10:07:47.443 +07:00 [ERR] TraceId:0HN70VHE1G3FN:0000000B. An unexpected error occurred while retrieving the Product en.
. Exception:Value cannot be null. (Parameter 'source').
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151.
BuildingBlock.Exceptions.InternalServerException: Value cannot be null. (Parameter 'source')
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151
2024-09-30 10:07:47.523 +07:00 [ERR] Error Message: Value cannot be null. (Parameter 'source'), Time of occurence "2024-09-30T03:07:47.5239563Z"
2024-09-30 10:09:15.657 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:00000009, Received request:/api/Product
2024-09-30 10:09:15.705 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000009, Get Product entities}
2024-09-30 10:09:15.718 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000009. Execute Query Product entities with null in database
2024-09-30 10:09:31.903 +07:00 [ERR] An error occurred using the connection to database 'E_Shop' on server 'LAPTOP-AS7TTRIH\SQLEXPRESS'.
2024-09-30 10:09:31.939 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SNI_PN11, error: 26 - Error Locating Server/Instance Specified)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover, SqlAuthenticationMethod authType)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:-1,State:0,Class:20
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SNI_PN11, error: 26 - Error Locating Server/Instance Specified)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover, SqlAuthenticationMethod authType)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:-1,State:0,Class:20
2024-09-30 10:09:32.050 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000009. Execute Query Product in database catch
. -Exception:A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SNI_PN11, error: 26 - Error Locating Server/Instance Specified)
. -Stacktrace:   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, Boolean encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean withFailover, SqlAuthenticationMethod authType)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Linq.Enumerable.TryGetSingle[TSource](IEnumerable`1 source, Boolean& found)
   at lambda_method13(Closure , QueryContext )
   at System.Linq.Queryable.Count[TSource](IQueryable`1 source)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 0
2024-09-30 10:09:32.123 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000009. An unexpected error occurred while retreiving the Product entities.
. Exception:A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SNI_PN11, error: 26 - Error Locating Server/Instance Specified).
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93.
BuildingBlock.Exceptions.InternalServerException: A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SNI_PN11, error: 26 - Error Locating Server/Instance Specified)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93
2024-09-30 10:09:32.239 +07:00 [ERR] Error Message: Product service has exception . A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: SNI_PN11, error: 26 - Error Locating Server/Instance Specified), Time of occurence "2024-09-30T03:09:32.2389045Z"
2024-09-30 10:09:43.496 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:0000000B, Received request:/api/Product
2024-09-30 10:09:43.498 +07:00 [INF] TraceId:0HN70VKVM7TD9:0000000B, Get Product entities}
2024-09-30 10:09:43.499 +07:00 [INF] TraceId:0HN70VKVM7TD9:0000000B. Execute Query Product entities with null in database
2024-09-30 10:09:43.758 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:0000000B. Fetch Product with 8 entity 
2024-09-30 10:09:43.962 +07:00 [ERR] Failed executing DbCommand (39ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedBy], [p].[CreatedDate], [p].[DeletedBy], [p].[Description], [p].[Discount], [p].[ImageURL], [p].[IsActice], [p].[IsDeleted], [p].[LastModifiedBy], [p].[LastModifiedDate], [p].[Name], [p].[Quantity], [p].[UnitPrice], [p].[Volume], [p].[Weight], [c].[Id], [c].[CreatedBy], [c].[CreatedDate], [c].[DeletedBy], [c].[IsActive], [c].[IsDeleted], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Products] AS [p]
LEFT JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
2024-09-30 10:09:43.975 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
2024-09-30 10:09:44.044 +07:00 [ERR] TraceId:0HN70VKVM7TD9:0000000B. Execute Query Product in database catch
. -Exception:Invalid column name 'Quantity'.
. -Stacktrace:   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 72
2024-09-30 10:09:44.124 +07:00 [ERR] TraceId:0HN70VKVM7TD9:0000000B. An unexpected error occurred while retreiving the Product entities.
. Exception:Invalid column name 'Quantity'..
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93.
BuildingBlock.Exceptions.InternalServerException: Invalid column name 'Quantity'.
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93
2024-09-30 10:09:44.338 +07:00 [ERR] Error Message: Product service has exception . Invalid column name 'Quantity'., Time of occurence "2024-09-30T03:09:44.3385840Z"
2024-09-30 10:09:46.176 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:0000000D, Received request:/api/Product
2024-09-30 10:09:46.177 +07:00 [INF] TraceId:0HN70VKVM7TD9:0000000D, Get Product entities}
2024-09-30 10:09:46.179 +07:00 [INF] TraceId:0HN70VKVM7TD9:0000000D. Execute Query Product entities with null in database
2024-09-30 10:09:46.189 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:0000000D. Fetch Product with 8 entity 
2024-09-30 10:09:46.195 +07:00 [ERR] Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedBy], [p].[CreatedDate], [p].[DeletedBy], [p].[Description], [p].[Discount], [p].[ImageURL], [p].[IsActice], [p].[IsDeleted], [p].[LastModifiedBy], [p].[LastModifiedDate], [p].[Name], [p].[Quantity], [p].[UnitPrice], [p].[Volume], [p].[Weight], [c].[Id], [c].[CreatedBy], [c].[CreatedDate], [c].[DeletedBy], [c].[IsActive], [c].[IsDeleted], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Products] AS [p]
LEFT JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
2024-09-30 10:09:46.200 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
2024-09-30 10:09:46.241 +07:00 [ERR] TraceId:0HN70VKVM7TD9:0000000D. Execute Query Product in database catch
. -Exception:Invalid column name 'Quantity'.
. -Stacktrace:   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 72
2024-09-30 10:09:46.318 +07:00 [ERR] TraceId:0HN70VKVM7TD9:0000000D. An unexpected error occurred while retreiving the Product entities.
. Exception:Invalid column name 'Quantity'..
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93.
BuildingBlock.Exceptions.InternalServerException: Invalid column name 'Quantity'.
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93
2024-09-30 10:09:46.513 +07:00 [ERR] Error Message: Product service has exception . Invalid column name 'Quantity'., Time of occurence "2024-09-30T03:09:46.5130164Z"
2024-09-30 10:09:50.054 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:0000000F, Received request:/api/Category
2024-09-30 10:09:50.059 +07:00 [INF] TraceId:0HN70VKVM7TD9:0000000F, Get Category entities}
2024-09-30 10:09:50.060 +07:00 [INF] TraceId:0HN70VKVM7TD9:0000000F. Execute Query Category entities with null in database
2024-09-30 10:09:50.065 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:0000000F. Fetch Category with 2 entity 
2024-09-30 10:09:54.196 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:00000011, Received request:/api/Product
2024-09-30 10:09:54.199 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000011, Get Product entities}
2024-09-30 10:09:54.201 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000011. Execute Query Product entities with null in database
2024-09-30 10:09:54.204 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:00000011. Fetch Product with 8 entity 
2024-09-30 10:09:54.209 +07:00 [ERR] Failed executing DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedBy], [p].[CreatedDate], [p].[DeletedBy], [p].[Description], [p].[Discount], [p].[ImageURL], [p].[IsActice], [p].[IsDeleted], [p].[LastModifiedBy], [p].[LastModifiedDate], [p].[Name], [p].[Quantity], [p].[UnitPrice], [p].[Volume], [p].[Weight], [c].[Id], [c].[CreatedBy], [c].[CreatedDate], [c].[DeletedBy], [c].[IsActive], [c].[IsDeleted], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Products] AS [p]
LEFT JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
2024-09-30 10:09:54.212 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
2024-09-30 10:09:54.255 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000011. Execute Query Product in database catch
. -Exception:Invalid column name 'Quantity'.
. -Stacktrace:   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 72
2024-09-30 10:09:54.329 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000011. An unexpected error occurred while retreiving the Product entities.
. Exception:Invalid column name 'Quantity'..
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93.
BuildingBlock.Exceptions.InternalServerException: Invalid column name 'Quantity'.
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93
2024-09-30 10:09:54.524 +07:00 [ERR] Error Message: Product service has exception . Invalid column name 'Quantity'., Time of occurence "2024-09-30T03:09:54.5244167Z"
2024-09-30 10:09:56.381 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:00000013, Received request:/api/Product
2024-09-30 10:09:56.384 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000013, Get Product entities}
2024-09-30 10:09:56.385 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000013. Execute Query Product entities with null in database
2024-09-30 10:09:56.388 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:00000013. Fetch Product with 8 entity 
2024-09-30 10:09:56.393 +07:00 [ERR] Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedBy], [p].[CreatedDate], [p].[DeletedBy], [p].[Description], [p].[Discount], [p].[ImageURL], [p].[IsActice], [p].[IsDeleted], [p].[LastModifiedBy], [p].[LastModifiedDate], [p].[Name], [p].[Quantity], [p].[UnitPrice], [p].[Volume], [p].[Weight], [c].[Id], [c].[CreatedBy], [c].[CreatedDate], [c].[DeletedBy], [c].[IsActive], [c].[IsDeleted], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Products] AS [p]
LEFT JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
2024-09-30 10:09:56.399 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
2024-09-30 10:09:56.442 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000013. Execute Query Product in database catch
. -Exception:Invalid column name 'Quantity'.
. -Stacktrace:   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 72
2024-09-30 10:09:56.518 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000013. An unexpected error occurred while retreiving the Product entities.
. Exception:Invalid column name 'Quantity'..
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93.
BuildingBlock.Exceptions.InternalServerException: Invalid column name 'Quantity'.
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93
2024-09-30 10:09:56.714 +07:00 [ERR] Error Message: Product service has exception . Invalid column name 'Quantity'., Time of occurence "2024-09-30T03:09:56.7149521Z"
2024-09-30 10:09:57.442 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:00000015, Received request:/api/Product
2024-09-30 10:09:57.444 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000015, Get Product entities}
2024-09-30 10:09:57.445 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000015. Execute Query Product entities with null in database
2024-09-30 10:09:57.447 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:00000015. Fetch Product with 8 entity 
2024-09-30 10:09:57.452 +07:00 [ERR] Failed executing DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[CategoryId], [p].[CreatedBy], [p].[CreatedDate], [p].[DeletedBy], [p].[Description], [p].[Discount], [p].[ImageURL], [p].[IsActice], [p].[IsDeleted], [p].[LastModifiedBy], [p].[LastModifiedDate], [p].[Name], [p].[Quantity], [p].[UnitPrice], [p].[Volume], [p].[Weight], [c].[Id], [c].[CreatedBy], [c].[CreatedDate], [c].[DeletedBy], [c].[IsActive], [c].[IsDeleted], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Products] AS [p]
LEFT JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
2024-09-30 10:09:57.454 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
2024-09-30 10:09:57.494 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000015. Execute Query Product in database catch
. -Exception:Invalid column name 'Quantity'.
. -Stacktrace:   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 72
2024-09-30 10:09:57.569 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000015. An unexpected error occurred while retreiving the Product entities.
. Exception:Invalid column name 'Quantity'..
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93.
BuildingBlock.Exceptions.InternalServerException: Invalid column name 'Quantity'.
   at Catalog.API.DAO.EntityDAO`1.GetEntities(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 77
   at Catalog.API.Repository.ProductRepository.GetAllProduct() in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 93
2024-09-30 10:09:57.763 +07:00 [ERR] Error Message: Product service has exception . Invalid column name 'Quantity'., Time of occurence "2024-09-30T03:09:57.7639733Z"
2024-09-30 10:10:02.186 +07:00 [INF] [Start] TraceId:0HN70VKVM7TD9:00000017, Received request:/api/Product/1
2024-09-30 10:10:02.189 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000017, Get Product entity with Id = 1
2024-09-30 10:10:12.771 +07:00 [INF] TraceId:0HN70VKVM7TD9:00000017. Execute Query Product entity with p => (p.Id == value(Catalog.API.Repository.ProductRepository+<>c__DisplayClass8_0).id) in database
2024-09-30 10:10:12.850 +07:00 [INF] [SUCCESS] TraceId:0HN70VKVM7TD9:00000017. Fetch Product with 1 entity 
2024-09-30 10:10:12.874 +07:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(2) [p].[Id], [p].[CategoryId], [p].[CreatedBy], [p].[CreatedDate], [p].[DeletedBy], [p].[Description], [p].[Discount], [p].[ImageURL], [p].[IsActice], [p].[IsDeleted], [p].[LastModifiedBy], [p].[LastModifiedDate], [p].[Name], [p].[Quantity], [p].[UnitPrice], [p].[Volume], [p].[Weight], [c].[Id], [c].[CreatedBy], [c].[CreatedDate], [c].[DeletedBy], [c].[IsActive], [c].[IsDeleted], [c].[LastModifiedBy], [c].[LastModifiedDate], [c].[Name]
FROM [Products] AS [p]
LEFT JOIN [Categories] AS [c] ON [p].[CategoryId] = [c].[Id]
WHERE [p].[Id] = @__id_0
2024-09-30 10:10:12.879 +07:00 [ERR] An exception occurred while iterating over the results of a query for context type 'Catalog.API.Models.CatalogDbContext'.
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
Microsoft.Data.SqlClient.SqlException (0x80131904): Invalid column name 'Quantity'.
   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:cf69fbc8-a665-4a9c-ac6a-22a0c8f88daf
Error Number:207,State:1,Class:16
2024-09-30 10:10:12.924 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000017. Execute Query Product in database catch
. -Exception:Invalid column name 'Quantity'.
. -Stacktrace:   at Microsoft.Data.SqlClient.SqlCommand.<>c.<ExecuteDbDataReaderAsync>b__189_0(Task`1 result)
   at System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 40
2024-09-30 10:10:12.999 +07:00 [ERR] TraceId:0HN70VKVM7TD9:00000017. An unexpected error occurred while retrieving the Product entity with Id = 1.
. Exception:Invalid column name 'Quantity'..
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Int32 id) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 119.
BuildingBlock.Exceptions.InternalServerException: Invalid column name 'Quantity'.
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Int32 id) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 119
2024-09-30 10:10:13.189 +07:00 [ERR] Error Message: Product service has exception . Invalid column name 'Quantity'., Time of occurence "2024-09-30T03:10:13.1893713Z"
2024-09-30 10:16:27.630 +07:00 [INF] [Start] TraceId:0HN70VOUOMIQI:00000009, Received request:/api/Product/1
2024-09-30 10:16:27.679 +07:00 [INF] TraceId:0HN70VOUOMIQI:00000009, Get Product entity with Id = 1
2024-09-30 10:16:30.001 +07:00 [INF] TraceId:0HN70VOUOMIQI:00000009. Execute Query Product entity with p => (p.Id == value(Catalog.API.Repository.ProductRepository+<>c__DisplayClass8_0).id) in database
2024-09-30 10:16:31.534 +07:00 [INF] [SUCCESS] TraceId:0HN70VOUOMIQI:00000009. Fetch Product with 1 entity 
2024-09-30 10:17:26.934 +07:00 [INF] [Start] TraceId:0HN70VPI1TQCB:00000009, Received request:/api/Product/1
2024-09-30 10:17:26.986 +07:00 [INF] TraceId:0HN70VPI1TQCB:00000009, Get Product entity with Id = 1
2024-09-30 10:17:34.810 +07:00 [INF] TraceId:0HN70VPI1TQCB:00000009. Execute Query Product entity with p => (p.Id == value(Catalog.API.Repository.ProductRepository+<>c__DisplayClass8_0).id) in database
2024-09-30 10:17:36.383 +07:00 [INF] [SUCCESS] TraceId:0HN70VPI1TQCB:00000009. Fetch Product with 1 entity 
2024-09-30 10:17:47.692 +07:00 [INF] TraceId:0HN70VPI1TQCB:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:17:49.229 +07:00 [INF] TraceId:0HN70VPI1TQCB:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:17:49.324 +07:00 [ERR] TraceId:0HN70VPI1TQCB:0000000B. Execute Query Product in database catch
. -Exception:Value cannot be null. (Parameter 'source')
. -Stacktrace:   at System.Linq.ThrowHelper.ThrowArgumentNullException(ExceptionArgument argument)
   at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source)
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 0
2024-09-30 10:17:49.382 +07:00 [ERR] TraceId:0HN70VPI1TQCB:0000000B. An unexpected error occurred while retrieving the Product en.
. Exception:Value cannot be null. (Parameter 'source').
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151.
BuildingBlock.Exceptions.InternalServerException: Value cannot be null. (Parameter 'source')
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151
2024-09-30 10:17:49.463 +07:00 [ERR] Error Message: Value cannot be null. (Parameter 'source'), Time of occurence "2024-09-30T03:17:49.4632022Z"
2024-09-30 10:18:05.556 +07:00 [INF] TraceId:0HN70VPI1TQCB:0000000D, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:21:17.948 +07:00 [INF] TraceId:0HN70VRK6G8OO:00000009, Get Product entity with query:p => (p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId)
2024-09-30 10:21:21.506 +07:00 [INF] TraceId:0HN70VRK6G8OO:00000009. Execute Query Product entity with p => (p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) in database
2024-09-30 10:21:22.306 +07:00 [ERR] TraceId:0HN70VRK6G8OO:00000009. Execute Query Product in database catch
. -Exception:Value cannot be null. (Parameter 'source')
. -Stacktrace:   at System.Linq.ThrowHelper.ThrowArgumentNullException(ExceptionArgument argument)
   at System.Linq.Enumerable.Any[TSource](IEnumerable`1 source)
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 0
2024-09-30 10:21:22.366 +07:00 [ERR] TraceId:0HN70VRK6G8OO:00000009. An unexpected error occurred while retrieving the Product en.
. Exception:Value cannot be null. (Parameter 'source').
 StackTrace:   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151.
BuildingBlock.Exceptions.InternalServerException: Value cannot be null. (Parameter 'source')
   at Catalog.API.DAO.EntityDAO`1.GetEntity(Expression`1 expression, Expression`1[] includeProperties) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\DAO\EntityDAO.cs:line 45
   at Catalog.API.Repository.ProductRepository.GetProduct(Expression`1 expression) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\Services\Catalog\Catalog.API\Repository\ProductRepository.cs:line 151
2024-09-30 10:21:22.451 +07:00 [ERR] Error Message: Value cannot be null. (Parameter 'source'), Time of occurence "2024-09-30T03:21:22.4509206Z"
2024-09-30 10:22:04.839 +07:00 [INF] [Start] TraceId:0HN70VRK6G8OO:0000000B, Received request:/api/Product/1
2024-09-30 10:22:04.844 +07:00 [INF] TraceId:0HN70VRK6G8OO:0000000B, Get Product entity with Id = 1
2024-09-30 10:22:22.815 +07:00 [INF] TraceId:0HN70VRK6G8OO:0000000B. Execute Query Product entity with p => (p.Id == value(Catalog.API.Repository.ProductRepository+<>c__DisplayClass8_0).id) in database
2024-09-30 10:22:51.717 +07:00 [INF] [SUCCESS] TraceId:0HN70VRK6G8OO:0000000B. Fetch Product with 1 entity 
2024-09-30 10:23:04.724 +07:00 [INF] TraceId:0HN70VRK6G8OO:0000000D, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:23:08.920 +07:00 [INF] TraceId:0HN70VRK6G8OO:0000000D. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:24:01.590 +07:00 [INF] TraceId:0HN70VT6U80SD:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:24:03.245 +07:00 [INF] TraceId:0HN70VT6U80SD:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:24:04.781 +07:00 [INF] [SUCCESS] TraceId:0HN70VT6U80SD:00000009. Fetch Product with 1 entity 
2024-09-30 10:24:04.977 +07:00 [INF] TraceId:0HN70VT6U80SD:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:24:06.973 +07:00 [INF] TraceId:0HN70VT6U80SD:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:24:06.982 +07:00 [INF] [SUCCESS] TraceId:0HN70VT6U80SD:00000009. Fetch Product with 1 entity 
2024-09-30 10:24:53.973 +07:00 [INF] TraceId:0HN70VTN4CE00:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:24:55.381 +07:00 [INF] TraceId:0HN70VTN4CE00:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:24:56.881 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:00000009. Fetch Product with 1 entity 
2024-09-30 10:24:57.029 +07:00 [INF] TraceId:0HN70VTN4CE00:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:24:58.234 +07:00 [INF] TraceId:0HN70VTN4CE00:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:24:58.241 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:00000009. Fetch Product with 1 entity 
2024-09-30 10:25:24.633 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:25:26.639 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:25:26.677 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:0000000B. Fetch Product with 1 entity 
2024-09-30 10:25:26.681 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:25:27.180 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:25:27.185 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:0000000B. Fetch Product with 1 entity 
2024-09-30 10:25:27.188 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:25:28.135 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:25:28.138 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:0000000B. Fetch Product with 0 entity 
2024-09-30 10:25:28.148 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:25:29.210 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:25:29.213 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:0000000B. Fetch Product with 0 entity 
2024-09-30 10:25:29.215 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:25:30.392 +07:00 [INF] TraceId:0HN70VTN4CE00:0000000B. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:25:30.398 +07:00 [INF] [SUCCESS] TraceId:0HN70VTN4CE00:0000000B. Fetch Product with 0 entity 
2024-09-30 10:26:38.307 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:26:39.515 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:26:41.047 +07:00 [INF] [SUCCESS] TraceId:0HN70VUL3D4VA:00000009. Fetch Product with 1 entity 
2024-09-30 10:26:41.195 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:26:41.857 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:26:41.864 +07:00 [INF] [SUCCESS] TraceId:0HN70VUL3D4VA:00000009. Fetch Product with 1 entity 
2024-09-30 10:26:41.868 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:26:45.275 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:26:45.278 +07:00 [INF] [SUCCESS] TraceId:0HN70VUL3D4VA:00000009. Fetch Product with 0 entity 
2024-09-30 10:26:45.288 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:26:45.997 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:26:46.000 +07:00 [INF] [SUCCESS] TraceId:0HN70VUL3D4VA:00000009. Fetch Product with 0 entity 
2024-09-30 10:26:46.003 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 10:26:47.826 +07:00 [INF] TraceId:0HN70VUL3D4VA:00000009. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 10:26:47.830 +07:00 [INF] [SUCCESS] TraceId:0HN70VUL3D4VA:00000009. Fetch Product with 0 entity 
2024-09-30 11:31:35.701 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null. (Parameter 'key')
   at System.ThrowHelper.ThrowArgumentNullException(String name)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at BuildingBlock.Middlewares.ResponseLoggingMiddleware.InvokeAsync(HttpContext context) in D:\Document\Documents\Project_CV\Microservices\E-Shop\EShop\src\BuildingBlocks\BuildingBlock\Middlewares\ResponseLoggingMiddleware.cs:line 29
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2024-09-30 11:32:27.451 +07:00 [INF] [Start] TraceId:0HN7112R9CPBV:00000009, Received request:/api/Product/1
2024-09-30 11:32:27.456 +07:00 [INF] TraceId:0HN7112R9CPBV:00000009, Get Product entity with Id = 1
2024-09-30 11:32:27.475 +07:00 [INF] TraceId:0HN7112R9CPBV:00000009. Execute Query Product entity with p => (p.Id == value(Catalog.API.Repository.ProductRepository+<>c__DisplayClass8_0).id) in database
2024-09-30 11:32:29.320 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPBV:00000009. Fetch Product with 1 entity 
2024-09-30 11:33:34.259 +07:00 [INF] TraceId:0HN7112R9CPC1:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:33:34.260 +07:00 [INF] TraceId:0HN7112R9CPC1:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:33:34.311 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC1:00000002. Fetch Product with 0 entity 
2024-09-30 11:33:34.330 +07:00 [INF] TraceId:0HN7112R9CPC1:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:33:34.332 +07:00 [INF] TraceId:0HN7112R9CPC1:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:33:34.337 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC1:00000002. Fetch Product with 0 entity 
2024-09-30 11:34:05.872 +07:00 [INF] TraceId:0HN7112R9CPC1:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:34:05.873 +07:00 [INF] TraceId:0HN7112R9CPC1:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:34:05.882 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC1:00000003. Fetch Product with 0 entity 
2024-09-30 11:34:05.887 +07:00 [INF] TraceId:0HN7112R9CPC1:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:34:05.891 +07:00 [INF] TraceId:0HN7112R9CPC1:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:34:05.894 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC1:00000003. Fetch Product with 0 entity 
2024-09-30 11:46:35.246 +07:00 [INF] TraceId:0HN7112R9CPC2:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:46:35.249 +07:00 [INF] TraceId:0HN7112R9CPC2:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:46:35.257 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC2:00000002. Fetch Product with 1 entity 
2024-09-30 11:46:35.263 +07:00 [INF] TraceId:0HN7112R9CPC2:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:46:35.265 +07:00 [INF] TraceId:0HN7112R9CPC2:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:46:35.268 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC2:00000002. Fetch Product with 1 entity 
2024-09-30 11:48:07.602 +07:00 [INF] TraceId:0HN7112R9CPC3:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:48:07.603 +07:00 [INF] TraceId:0HN7112R9CPC3:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:48:07.606 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC3:00000002. Fetch Product with 1 entity 
2024-09-30 11:48:07.610 +07:00 [INF] TraceId:0HN7112R9CPC3:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:48:07.612 +07:00 [INF] TraceId:0HN7112R9CPC3:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:48:07.614 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC3:00000002. Fetch Product with 1 entity 
2024-09-30 11:50:51.776 +07:00 [INF] TraceId:0HN7112R9CPC4:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:50:51.778 +07:00 [INF] TraceId:0HN7112R9CPC4:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:50:51.781 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC4:00000002. Fetch Product with 1 entity 
2024-09-30 11:50:51.785 +07:00 [INF] TraceId:0HN7112R9CPC4:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:50:51.786 +07:00 [INF] TraceId:0HN7112R9CPC4:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:50:51.788 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC4:00000002. Fetch Product with 1 entity 
2024-09-30 11:52:59.079 +07:00 [INF] TraceId:0HN7112R9CPC5:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:52:59.081 +07:00 [INF] TraceId:0HN7112R9CPC5:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:52:59.084 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC5:00000002. Fetch Product with 1 entity 
2024-09-30 11:52:59.088 +07:00 [INF] TraceId:0HN7112R9CPC5:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:52:59.090 +07:00 [INF] TraceId:0HN7112R9CPC5:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:52:59.094 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC5:00000002. Fetch Product with 1 entity 
2024-09-30 11:54:28.050 +07:00 [INF] TraceId:0HN7112R9CPC6:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:54:28.053 +07:00 [INF] TraceId:0HN7112R9CPC6:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:54:28.058 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC6:00000002. Fetch Product with 1 entity 
2024-09-30 11:54:28.061 +07:00 [INF] TraceId:0HN7112R9CPC6:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:54:28.064 +07:00 [INF] TraceId:0HN7112R9CPC6:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:54:28.065 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC6:00000002. Fetch Product with 1 entity 
2024-09-30 11:55:09.035 +07:00 [INF] TraceId:0HN7112R9CPC6:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:55:09.036 +07:00 [INF] TraceId:0HN7112R9CPC6:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:55:09.039 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC6:00000003. Fetch Product with 1 entity 
2024-09-30 11:55:09.041 +07:00 [INF] TraceId:0HN7112R9CPC6:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:55:09.043 +07:00 [INF] TraceId:0HN7112R9CPC6:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:55:09.045 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC6:00000003. Fetch Product with 1 entity 
2024-09-30 11:55:09.047 +07:00 [INF] TraceId:0HN7112R9CPC6:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:55:09.047 +07:00 [INF] TraceId:0HN7112R9CPC6:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:55:09.050 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC6:00000003. Fetch Product with 0 entity 
2024-09-30 11:56:23.481 +07:00 [INF] TraceId:0HN7112R9CPC7:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:56:23.482 +07:00 [INF] TraceId:0HN7112R9CPC7:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:56:23.485 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC7:00000002. Fetch Product with 1 entity 
2024-09-30 11:56:23.489 +07:00 [INF] TraceId:0HN7112R9CPC7:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:56:23.491 +07:00 [INF] TraceId:0HN7112R9CPC7:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:56:23.497 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC7:00000002. Fetch Product with 1 entity 
2024-09-30 11:56:23.501 +07:00 [INF] TraceId:0HN7112R9CPC7:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:56:23.503 +07:00 [INF] TraceId:0HN7112R9CPC7:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:56:23.505 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC7:00000002. Fetch Product with 0 entity 
2024-09-30 11:57:53.706 +07:00 [INF] TraceId:0HN7112R9CPC8:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:57:54.117 +07:00 [INF] TraceId:0HN7112R9CPC8:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:57:54.122 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC8:00000002. Fetch Product with 1 entity 
2024-09-30 11:58:13.702 +07:00 [INF] TraceId:0HN7112R9CPC8:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:58:13.703 +07:00 [INF] TraceId:0HN7112R9CPC8:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:58:13.705 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC8:00000002. Fetch Product with 1 entity 
2024-09-30 11:58:25.194 +07:00 [INF] TraceId:0HN7112R9CPC8:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 11:58:25.196 +07:00 [INF] TraceId:0HN7112R9CPC8:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 11:58:25.197 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC8:00000002. Fetch Product with 0 entity 
2024-09-30 12:00:22.674 +07:00 [INF] TraceId:0HN7112R9CPC9:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 12:00:22.683 +07:00 [INF] TraceId:0HN7112R9CPC9:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 12:00:22.687 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC9:00000002. Fetch Product with 1 entity 
2024-09-30 12:00:22.691 +07:00 [INF] TraceId:0HN7112R9CPC9:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 12:00:22.692 +07:00 [INF] TraceId:0HN7112R9CPC9:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 12:00:22.694 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC9:00000002. Fetch Product with 1 entity 
2024-09-30 12:00:22.696 +07:00 [INF] TraceId:0HN7112R9CPC9:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 12:00:22.698 +07:00 [INF] TraceId:0HN7112R9CPC9:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 12:00:22.702 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC9:00000002. Fetch Product with 0 entity 
2024-09-30 12:00:49.292 +07:00 [INF] TraceId:0HN7112R9CPC9:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 12:00:49.298 +07:00 [INF] TraceId:0HN7112R9CPC9:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 12:00:49.302 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC9:00000003. Fetch Product with 1 entity 
2024-09-30 12:00:49.305 +07:00 [INF] TraceId:0HN7112R9CPC9:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 12:00:49.307 +07:00 [INF] TraceId:0HN7112R9CPC9:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 12:00:49.310 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC9:00000003. Fetch Product with 1 entity 
2024-09-30 12:00:49.317 +07:00 [INF] TraceId:0HN7112R9CPC9:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 12:00:49.318 +07:00 [INF] TraceId:0HN7112R9CPC9:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 12:00:49.319 +07:00 [INF] [SUCCESS] TraceId:0HN7112R9CPC9:00000003. Fetch Product with 0 entity 
2024-09-30 13:39:34.714 +07:00 [INF] TraceId:0HN713AAFU6KN:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:39:34.780 +07:00 [INF] TraceId:0HN713AAFU6KN:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:39:36.687 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000002. Fetch Product with 1 entity 
2024-09-30 13:39:36.863 +07:00 [INF] TraceId:0HN713AAFU6KN:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:39:36.864 +07:00 [INF] TraceId:0HN713AAFU6KN:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:39:36.870 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000002. Fetch Product with 1 entity 
2024-09-30 13:39:36.875 +07:00 [INF] TraceId:0HN713AAFU6KN:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:39:36.877 +07:00 [INF] TraceId:0HN713AAFU6KN:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:39:36.879 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000002. Fetch Product with 0 entity 
2024-09-30 13:40:45.618 +07:00 [INF] TraceId:0HN713AAFU6KN:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:40:45.622 +07:00 [INF] TraceId:0HN713AAFU6KN:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:40:45.694 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000003. Fetch Product with 1 entity 
2024-09-30 13:40:45.699 +07:00 [INF] TraceId:0HN713AAFU6KN:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:40:45.700 +07:00 [INF] TraceId:0HN713AAFU6KN:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:40:45.702 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000003. Fetch Product with 1 entity 
2024-09-30 13:40:45.708 +07:00 [INF] TraceId:0HN713AAFU6KN:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:40:45.709 +07:00 [INF] TraceId:0HN713AAFU6KN:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:40:45.712 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000003. Fetch Product with 0 entity 
2024-09-30 13:41:01.537 +07:00 [INF] TraceId:0HN713AAFU6KN:00000004, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:41:01.541 +07:00 [INF] TraceId:0HN713AAFU6KN:00000004. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:41:01.552 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000004. Fetch Product with 1 entity 
2024-09-30 13:41:01.559 +07:00 [INF] TraceId:0HN713AAFU6KN:00000004, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:41:01.560 +07:00 [INF] TraceId:0HN713AAFU6KN:00000004. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:41:01.562 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000004. Fetch Product with 1 entity 
2024-09-30 13:41:01.564 +07:00 [INF] TraceId:0HN713AAFU6KN:00000004, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:41:01.565 +07:00 [INF] TraceId:0HN713AAFU6KN:00000004. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:41:01.566 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KN:00000004. Fetch Product with 0 entity 
2024-09-30 13:41:50.292 +07:00 [INF] TraceId:0HN713AAFU6KO:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:41:50.294 +07:00 [INF] TraceId:0HN713AAFU6KO:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:41:50.299 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KO:00000002. Fetch Product with 1 entity 
2024-09-30 13:41:50.303 +07:00 [INF] TraceId:0HN713AAFU6KO:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:41:50.306 +07:00 [INF] TraceId:0HN713AAFU6KO:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:41:50.309 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KO:00000002. Fetch Product with 1 entity 
2024-09-30 13:41:50.312 +07:00 [INF] TraceId:0HN713AAFU6KO:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:41:50.314 +07:00 [INF] TraceId:0HN713AAFU6KO:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:41:50.317 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KO:00000002. Fetch Product with 0 entity 
2024-09-30 13:42:33.639 +07:00 [INF] TraceId:0HN713AAFU6KO:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:42:33.641 +07:00 [INF] TraceId:0HN713AAFU6KO:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:42:33.644 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KO:00000003. Fetch Product with 1 entity 
2024-09-30 13:42:33.647 +07:00 [INF] TraceId:0HN713AAFU6KO:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:42:33.648 +07:00 [INF] TraceId:0HN713AAFU6KO:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:42:33.650 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KO:00000003. Fetch Product with 1 entity 
2024-09-30 13:42:33.651 +07:00 [INF] TraceId:0HN713AAFU6KO:00000003, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:42:33.653 +07:00 [INF] TraceId:0HN713AAFU6KO:00000003. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:42:33.654 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KO:00000003. Fetch Product with 0 entity 
2024-09-30 13:43:59.997 +07:00 [INF] TraceId:0HN713AAFU6KP:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:43:59.999 +07:00 [INF] TraceId:0HN713AAFU6KP:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:44:00.003 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KP:00000002. Fetch Product with 1 entity 
2024-09-30 13:44:00.008 +07:00 [INF] TraceId:0HN713AAFU6KP:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:44:00.009 +07:00 [INF] TraceId:0HN713AAFU6KP:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:44:00.010 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KP:00000002. Fetch Product with 1 entity 
2024-09-30 13:44:00.017 +07:00 [INF] TraceId:0HN713AAFU6KP:00000002, Get Product entity with query:p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1)))
2024-09-30 13:44:00.019 +07:00 [INF] TraceId:0HN713AAFU6KP:00000002. Execute Query Product entity with p => (((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).productId) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) in database
2024-09-30 13:44:00.022 +07:00 [INF] [SUCCESS] TraceId:0HN713AAFU6KP:00000002. Fetch Product with 0 entity 
2024-09-30 14:26:06.998 +07:00 [INF] [Start] TraceId:0HN7144CVLDP0:00000009, Received request:/api/Product
2024-09-30 14:26:07.043 +07:00 [INF] TraceId:0HN7144CVLDP0:00000009, Get Product entities}
2024-09-30 14:26:07.057 +07:00 [INF] TraceId:0HN7144CVLDP0:00000009. Execute Query Product entities with null in database
2024-09-30 14:26:08.588 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP0:00000009. Fetch Product with 9 entity 
2024-09-30 14:27:19.497 +07:00 [INF] TraceId:0HN7144CVLDP1:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 14:27:19.501 +07:00 [INF] TraceId:0HN7144CVLDP1:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 14:27:19.611 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP1:00000002. Fetch Product with 0 entity 
2024-09-30 14:27:19.633 +07:00 [INF] TraceId:0HN7144CVLDP1:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 14:27:19.634 +07:00 [INF] TraceId:0HN7144CVLDP1:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 14:27:19.638 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP1:00000002. Fetch Product with 1 entity 
2024-09-30 14:27:19.644 +07:00 [INF] TraceId:0HN7144CVLDP1:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 14:27:19.645 +07:00 [INF] TraceId:0HN7144CVLDP1:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 14:27:19.647 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP1:00000002. Fetch Product with 0 entity 
2024-09-30 14:27:43.329 +07:00 [INF] TraceId:0HN7144CVLDP1:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 14:27:43.331 +07:00 [INF] TraceId:0HN7144CVLDP1:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 14:27:43.342 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP1:00000003. Fetch Product with 0 entity 
2024-09-30 14:27:43.345 +07:00 [INF] TraceId:0HN7144CVLDP1:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 14:27:43.348 +07:00 [INF] TraceId:0HN7144CVLDP1:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 14:27:43.350 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP1:00000003. Fetch Product with 1 entity 
2024-09-30 14:27:43.352 +07:00 [INF] TraceId:0HN7144CVLDP1:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 14:27:43.356 +07:00 [INF] TraceId:0HN7144CVLDP1:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 14:27:43.358 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP1:00000003. Fetch Product with 0 entity 
2024-09-30 15:01:28.764 +07:00 [INF] TraceId:0HN7144CVLDP2:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:01:28.767 +07:00 [INF] TraceId:0HN7144CVLDP2:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:01:28.772 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP2:00000002. Fetch Product with 0 entity 
2024-09-30 15:01:28.775 +07:00 [INF] TraceId:0HN7144CVLDP2:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:01:28.777 +07:00 [INF] TraceId:0HN7144CVLDP2:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:01:28.779 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP2:00000002. Fetch Product with 1 entity 
2024-09-30 15:01:28.781 +07:00 [INF] TraceId:0HN7144CVLDP2:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:01:28.785 +07:00 [INF] TraceId:0HN7144CVLDP2:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:01:28.787 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP2:00000002. Fetch Product with 0 entity 
2024-09-30 15:06:42.762 +07:00 [INF] TraceId:0HN7144CVLDP3:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:06:42.766 +07:00 [INF] TraceId:0HN7144CVLDP3:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:06:42.769 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP3:00000002. Fetch Product with 0 entity 
2024-09-30 15:06:42.773 +07:00 [INF] TraceId:0HN7144CVLDP3:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:06:42.780 +07:00 [INF] TraceId:0HN7144CVLDP3:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:06:42.782 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP3:00000002. Fetch Product with 1 entity 
2024-09-30 15:06:42.784 +07:00 [INF] TraceId:0HN7144CVLDP3:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:06:42.785 +07:00 [INF] TraceId:0HN7144CVLDP3:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:06:42.787 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP3:00000002. Fetch Product with 0 entity 
2024-09-30 15:48:18.503 +07:00 [INF] TraceId:0HN7144CVLDP4:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:48:18.507 +07:00 [INF] TraceId:0HN7144CVLDP4:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:48:18.517 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP4:00000002. Fetch Product with 0 entity 
2024-09-30 15:48:18.521 +07:00 [INF] TraceId:0HN7144CVLDP4:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:48:18.523 +07:00 [INF] TraceId:0HN7144CVLDP4:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:48:18.525 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP4:00000002. Fetch Product with 1 entity 
2024-09-30 15:48:18.532 +07:00 [INF] TraceId:0HN7144CVLDP4:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:48:18.535 +07:00 [INF] TraceId:0HN7144CVLDP4:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:48:18.537 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP4:00000002. Fetch Product with 0 entity 
2024-09-30 15:49:19.807 +07:00 [INF] TraceId:0HN7144CVLDP4:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:49:19.810 +07:00 [INF] TraceId:0HN7144CVLDP4:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:49:19.814 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP4:00000003. Fetch Product with 0 entity 
2024-09-30 15:49:19.817 +07:00 [INF] TraceId:0HN7144CVLDP4:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:49:19.819 +07:00 [INF] TraceId:0HN7144CVLDP4:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:49:19.822 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP4:00000003. Fetch Product with 1 entity 
2024-09-30 15:49:19.824 +07:00 [INF] TraceId:0HN7144CVLDP4:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:49:19.829 +07:00 [INF] TraceId:0HN7144CVLDP4:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:49:19.833 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP4:00000003. Fetch Product with 0 entity 
2024-09-30 15:51:52.831 +07:00 [INF] TraceId:0HN7144CVLDP5:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:51:52.833 +07:00 [INF] TraceId:0HN7144CVLDP5:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:51:52.837 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP5:00000002. Fetch Product with 0 entity 
2024-09-30 15:51:52.840 +07:00 [INF] TraceId:0HN7144CVLDP5:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:51:52.842 +07:00 [INF] TraceId:0HN7144CVLDP5:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:51:52.845 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP5:00000002. Fetch Product with 1 entity 
2024-09-30 15:51:52.848 +07:00 [INF] TraceId:0HN7144CVLDP5:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:51:52.853 +07:00 [INF] TraceId:0HN7144CVLDP5:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:51:52.858 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP5:00000002. Fetch Product with 0 entity 
2024-09-30 15:53:15.423 +07:00 [INF] TraceId:0HN7144CVLDP6:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:53:15.426 +07:00 [INF] TraceId:0HN7144CVLDP6:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:53:15.430 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP6:00000002. Fetch Product with 0 entity 
2024-09-30 15:53:15.435 +07:00 [INF] TraceId:0HN7144CVLDP6:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:53:15.439 +07:00 [INF] TraceId:0HN7144CVLDP6:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:53:15.443 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP6:00000002. Fetch Product with 1 entity 
2024-09-30 15:53:15.444 +07:00 [INF] TraceId:0HN7144CVLDP6:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:53:15.446 +07:00 [INF] TraceId:0HN7144CVLDP6:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:53:15.448 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP6:00000002. Fetch Product with 0 entity 
2024-09-30 15:55:46.317 +07:00 [INF] TraceId:0HN7144CVLDP7:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:55:46.321 +07:00 [INF] TraceId:0HN7144CVLDP7:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:55:46.325 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP7:00000002. Fetch Product with 0 entity 
2024-09-30 15:55:46.329 +07:00 [INF] TraceId:0HN7144CVLDP7:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:55:46.336 +07:00 [INF] TraceId:0HN7144CVLDP7:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:55:46.338 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP7:00000002. Fetch Product with 1 entity 
2024-09-30 15:55:46.340 +07:00 [INF] TraceId:0HN7144CVLDP7:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:55:46.341 +07:00 [INF] TraceId:0HN7144CVLDP7:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:55:46.344 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP7:00000002. Fetch Product with 0 entity 
2024-09-30 15:56:26.351 +07:00 [INF] TraceId:0HN7144CVLDP7:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:56:26.353 +07:00 [INF] TraceId:0HN7144CVLDP7:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:56:26.356 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP7:00000003. Fetch Product with 0 entity 
2024-09-30 15:56:26.359 +07:00 [INF] TraceId:0HN7144CVLDP7:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:56:26.361 +07:00 [INF] TraceId:0HN7144CVLDP7:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:56:26.363 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP7:00000003. Fetch Product with 1 entity 
2024-09-30 15:56:26.366 +07:00 [INF] TraceId:0HN7144CVLDP7:00000003, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:56:26.368 +07:00 [INF] TraceId:0HN7144CVLDP7:00000003. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:56:26.373 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP7:00000003. Fetch Product with 0 entity 
2024-09-30 15:59:12.558 +07:00 [INF] TraceId:0HN7144CVLDP8:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:59:12.561 +07:00 [INF] TraceId:0HN7144CVLDP8:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:59:12.566 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP8:00000002. Fetch Product with 0 entity 
2024-09-30 15:59:12.570 +07:00 [INF] TraceId:0HN7144CVLDP8:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:59:12.574 +07:00 [INF] TraceId:0HN7144CVLDP8:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:59:12.577 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP8:00000002. Fetch Product with 1 entity 
2024-09-30 15:59:12.583 +07:00 [INF] TraceId:0HN7144CVLDP8:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 15:59:12.584 +07:00 [INF] TraceId:0HN7144CVLDP8:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 15:59:12.587 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP8:00000002. Fetch Product with 0 entity 
2024-09-30 16:20:55.932 +07:00 [INF] TraceId:0HN7144CVLDP9:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 16:20:55.934 +07:00 [INF] TraceId:0HN7144CVLDP9:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 16:20:55.978 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP9:00000002. Fetch Product with 0 entity 
2024-09-30 16:20:55.992 +07:00 [INF] TraceId:0HN7144CVLDP9:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 16:20:56.003 +07:00 [INF] TraceId:0HN7144CVLDP9:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 16:20:56.007 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP9:00000002. Fetch Product with 1 entity 
2024-09-30 16:20:56.012 +07:00 [INF] TraceId:0HN7144CVLDP9:00000002, Get Product entity with query:p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1)))
2024-09-30 16:20:56.014 +07:00 [INF] TraceId:0HN7144CVLDP9:00000002. Execute Query Product entity with p => ((((p.Id == value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Key) AndAlso (p.IsActice == Convert(True, Nullable`1))) AndAlso (p.Quantity > Convert(0, Nullable`1))) AndAlso (p.Quantity >= Convert(value(Catalog.API.Controllers.ProductController+<>c__DisplayClass10_0).product.Value, Nullable`1))) in database
2024-09-30 16:20:56.017 +07:00 [INF] [SUCCESS] TraceId:0HN7144CVLDP9:00000002. Fetch Product with 0 entity 
